Ljavax/persistence/EntityManager; javax/persistence/TypedQuery createQuery(java/lang/String,java/lang/Class)> -> _SINK_
Ljavax/servlet/http/HttpServletResponse; void sendRedirect(java/lang/String)> -> _SINK_
Ljava/io/File; boolean delete()> -> _SINK_
Lorg/apache/xalan/xsltc/runtime/BasisLibrary; java/lang/String replace(java/lang/String,java/lang/String,java/lang/String[])> -> _SINK_
Lorg/springframework/mock/web/portlet/MockPortletRequest; void setParameters(java/util/Map)> -> _SINK_
Lorg/apache/axis2/description/AxisService; void printWSDLError(java/io/OutputStream)> -> _SINK_
Lorg/springframework/mock/web/portlet/MockPortletRequest; void setParameter(java/lang/String,java/lang/String)> -> _SINK_
Lorg/apache/commons/lang3/text/StrSubstitutor; java/lang/String replace(char[])> -> _SINK_
Lorg/apache/xmlrpc/webserver/XmlRpcServletServer; void setResponseHeader(org/apache/xmlrpc/common/ServerStreamConnection,java/lang/String,java/lang/String)> -> _SINK_
Lnet/sourceforge/pebble/domain/Comment; void setAuthenticated(boolean)> -> _SINK_
Ljava/lang/String; java/lang/String replaceFirst(java/lang/String,java/lang/String)> -> _SINK_
Lorg/springframework/web/socket/server/support/WebSocketHttpRequestHandler; void handleRequest(javax/servlet/http/HttpServletRequest,javax/servlet/http/HttpServletResponse)> -> _SINK_
Lorg/apache/xmlrpc/server/ReflectiveXmlRpcHandler; java/lang/Object execute(org/apache/xmlrpc/XmlRpcRequest)> -> _SINK_
Lcom/mysql/jdbc/Statement; java/sql/ResultSet executeQuery(java/lang/String)> -> _SINK_
Lorg/springframework/test/context/transaction/TransactionalTestExecutionListener; void runAfterTransactionMethods(org/springframework/test/context/TestContext)> -> _SINK_
Lorg/springframework/web/servlet/tags/UrlTag; java/lang/String createUrl()> -> _SINK_
Lorg/apache/xmlrpc/webserver/XmlRpcServlet; void log(java/lang/String)> -> _SINK_
Lorg/apache/stratos/cli/StratosApplication; int run(java/lang/String[])> -> _SINK_
Lorg/owasp/webgoat/session/ParameterParser; void update(javax/servlet/ServletRequest)> -> _SINK_
Lorg/apache/commons/lang3/text/StrSubstitutor; java/lang/String replace(java/lang/CharSequence)> -> _SINK_
Lorg/apache/xmlrpc/webserver/XmlRpcServletServer; void execute(javax/servlet/http/HttpServletRequest,javax/servlet/http/HttpServletResponse)> -> _SINK_
Lorg/apache/xmlrpc/webserver/ServletOutputStreamImpl; void write(byte[],int,int)> -> _SINK_
Lorg/apache/xmlrpc/webserver/ConnectionServer; void writeResponse(org/apache/xmlrpc/common/XmlRpcStreamRequestConfig,java/io/OutputStream,java/lang/Object)> -> _SINK_
Lorg/apache/xmlrpc/webserver/Connection; void writeResponseHeader(org/apache/xmlrpc/webserver/RequestData,int)> -> _SINK_
Lorg/apache/bcel/util/JavaWrapper; void runMain(java/lang/String,java/lang/String[])> -> _SINK_
Lorg/springframework/format/datetime/joda/PeriodFormatter; java/lang/Object parse(java/lang/String,java/util/Locale)> -> _SINK_
Lorg/apache/xerces/impl/xs/models/XSDFACM; void dumpTree(org/apache/xerces/impl/dtd/models/CMNode,int)> -> _SINK_
Lorg/springframework/jdbc/core/JdbcTemplate; java/lang/Object query(java/lang/String,org/springframework/jdbc/core/ResultSetExtractor)> -> _SINK_
Lorg/owasp/webgoat/session/DatabaseUtilities; java/sql/Connection getHsqldbConnection(java/lang/String,org/owasp/webgoat/session/WebgoatContext)> -> _SINK_
Lorg/springframework/jdbc/core/JdbcTemplate; void execute(java/lang/String)> -> _SINK_
Lorg/springframework/mock/web/MockBodyContent; void println(java/lang/String)> -> _SINK_
Lorg/owasp/webgoat/HammerHead; void log(javax/servlet/http/HttpServletRequest,java/lang/String)> -> _SINK_
Lorg/apache/xmlrpc/server/XmlRpcServerWorker; java/lang/Object execute(org/apache/xmlrpc/XmlRpcRequest)> -> _SINK_
Lorg/owasp/webgoat/session/LessonSession; void setAuthenticated(boolean)> -> _SINK_
Lorg/springframework/orm/hibernate3/support/ClobStringType; int[] sqlTypes()> -> _SINK_
Lorg/owasp/webgoat/session/WebSession; void update(javax/servlet/http/HttpServletRequest,javax/servlet/http/HttpServletResponse,java/lang/String)> -> _SINK_
Lorg/hibernate/validator/internal/util/ConcurrentReferenceHashMap; boolean replace(java/lang/Object,java/lang/Object,java/lang/Object)> -> _SINK_
Lorg/apache/xmlrpc/webserver/WebServer; void setParanoid(boolean)> -> _SINK_
Lcom/novell/ldap/rfc2251/RfcFilter; void addSubstring(int,byte[])> -> _SINK_
Lorg/springframework/web/socket/sockjs/transport/session/WebSocketServerSockJsSession; void handleMessage(org/springframework/web/socket/TextMessage,org/springframework/web/socket/WebSocketSession)> -> _SINK_
Lorg/xmldb/api/base/XMLDBException; void printStackTrace(java/io/PrintWriter)> -> _SINK_
Lorg/springframework/web/socket/adapter/standard/StandardWebSocketSession; void sendTextMessage(org/springframework/web/socket/TextMessage)> -> _SINK_
Lorg/apache/xerces/impl/xpath/regex/REUtil; void dumpString(java/lang/String)> -> _SINK_
Lorg/apache/xalan/xsltc/compiler/util/Util; java/lang/String replace(java/lang/String,java/lang/String,java/lang/String[])> -> _SINK_
Lorg/apache/http/impl/conn/DefaultClientConnection; void sendRequestHeader(org/apache/http/HttpRequest)> -> _SINK_
Lorg/apache/commons/validator/util/ValidatorUtils; java/lang/String replace(java/lang/String,java/lang/String,java/lang/String)> -> _SINK_
Lcom/google/json/JsonSanitizer; void replace(int,int,java/lang/String)> -> _SINK_
Lorg/owasp/esapi/reference/validation/StringValidationRule; void addBlacklistPattern(java/util/regex/Pattern)> -> _SINK_
Lorg/apache/commons/lang3/text/StrSubstitutor; java/lang/String replace(java/lang/CharSequence,int,int)> -> _SINK_
Ljava/lang/String; java/lang/String replace(java/lang/CharSequence,java/lang/CharSequence)> -> _SINK_
Lorg/hibernate/validator/internal/util/ConcurrentReferenceHashMap; java/lang/Object replace(java/lang/Object,java/lang/Object)> -> _SINK_
Lorg/springframework/security/util/FieldUtils; void setProtectedFieldValue(java/lang/String,java/lang/Object,java/lang/Object)> -> _SINK_
Lorg/springframework/mock/web/MockBodyContent; void println(char[])> -> _SINK_
Lorg/springframework/test/context/junit4/SpringJUnit4ClassRunner; void runChild(org/junit/runners/model/FrameworkMethod,org/junit/runner/notification/RunNotifier)> -> _SINK_
Lorg/springframework/web/socket/handler/ConcurrentWebSocketSessionDecorator; void sendMessage(org/springframework/web/socket/WebSocketMessage)> -> _SINK_
Lorg/springframework/orm/hibernate3/TypeDefinitionBean; void setParameters(java/util/Properties)> -> _SINK_
Lorg/springframework/format/datetime/joda/DateTimeParser; org/joda/time/DateTime parse(java/lang/String,java/util/Locale)> -> _SINK_
Lorg/apache/commons/io/HexDump; void dump(byte[],long,java/io/OutputStream,int)> -> _SINK_
Lorg/springframework/mock/web/MockJspWriter; void println(java/lang/String)> -> _SINK_
Lorg/apache/xalan/templates/ElemTemplateElement; org/w3c/dom/Node replaceChild(org/w3c/dom/Node,org/w3c/dom/Node)> -> _SINK_
Lorg/springframework/web/socket/config/HandlersBeanDefinitionParser; org/springframework/beans/factory/config/BeanDefinition parse(org/w3c/dom/Element,org/springframework/beans/factory/xml/ParserContext)> -> _SINK_
Lcom/github/scribejava/core/oauth/OAuth20Service; com/github/scribejava/core/model/OAuth2AccessToken sendAccessTokenRequestSync(com/github/scribejava/core/model/OAuthRequest)> -> _SINK_
Lcom/github/scribejava/core/oauth/OAuth20Service; java/util/concurrent/Future sendAccessTokenRequestAsync(com/github/scribejava/core/model/OAuthRequestAsync,com/github/scribejava/core/model/OAuthAsyncRequestCallback)> -> _SINK_
Lorg/apache/xmlrpc/client/XmlRpcClient; java/lang/Object execute(java/lang/String,java/lang/Object[])> -> _SINK_
Ljava/lang/Runtime; java/lang/Process exec(java/lang/String)> -> _SINK_
Lorg/apache/xpath/jaxp/XPathImpl; javax/xml/xpath/XPathExpression compile(java/lang/String)> -> _SINK_
Lorg/jsoup/parser/Parser; org/jsoup/nodes/Document parse(java/lang/String,java/lang/String)> -> _SINK_
Lorg/jsoup/nodes/Node; org/jsoup/nodes/Node before(java/lang/String)> -> _SINK_
Lorg/jsoup/nodes/Node; org/jsoup/nodes/Node after(java/lang/String)> -> _SINK_
Ljavax/servlet/http/HttpServletResponseWrapper; void sendRedirect(java/lang/String)> -> _SINK_
Ljava/net/URLConnection; void connect()> -> _SINK_
Ljava/net/URLConnection; java/io/OutputStream getOutputStream()> -> _SINK_
Ljava/net/URL; void set(java/lang/String,java/lang/String,int,java/lang/String,java/lang/String)> -> _SINK_
Ljava/net/URL; void set(java/lang/String,java/lang/String,int,java/lang/String,java/lang/String,java/lang/String,java/lang/String,java/lang/String)> -> _SINK_
Landroid/os/Bundle; void putBinder(java/lang/String,android/os/IBinder)> -> _SINK_
Landroid/os/Bundle; void putBoolean(java/lang/String,boolean)> -> _SINK_
Landroid/os/Bundle; void putBooleanArray(java/lang/String,boolean[])> -> _SINK_
Landroid/os/Bundle; void putBundle(java/lang/String,android/os/Bundle)> -> _SINK_
Landroid/os/Bundle; void putByte(java/lang/String,byte)> -> _SINK_
Landroid/os/Bundle; void putByteArray(java/lang/String,byte[])> -> _SINK_
Landroid/os/Bundle; void putChar(java/lang/String,char)> -> _SINK_
Landroid/os/Bundle; void putCharArray(java/lang/String,char[])> -> _SINK_
Landroid/os/Bundle; void putCharSequence(java/lang/String,java/lang/CharSequence)> -> _SINK_
Landroid/os/Bundle; void putCharSequenceArray(java/lang/String,java/lang/CharSequence[])> -> _SINK_
Landroid/os/Bundle; void putCharSequenceArrayList(java/lang/String,java/util/ArrayList)> -> _SINK_
Landroid/os/Bundle; void putDouble(java/lang/String,double)> -> _SINK_
Landroid/os/Bundle; void putDoubleArray(java/lang/String,double[])> -> _SINK_
Landroid/os/Bundle; void putFloat(java/lang/String,float)> -> _SINK_
Landroid/os/Bundle; void putFloatArray(java/lang/String,float[])> -> _SINK_
Landroid/os/Bundle; void putInt(java/lang/String,int)> -> _SINK_
Landroid/os/Bundle; void putIntArray(java/lang/String,int[])> -> _SINK_
Landroid/os/Bundle; void putIntegerArrayList(java/lang/String,java/util/ArrayList)> -> _SINK_
Landroid/os/Bundle; void putLong(java/lang/String,long)> -> _SINK_
Landroid/os/Bundle; void putLongArray(java/lang/String,long[])> -> _SINK_
Landroid/os/Bundle; void putParcelable(java/lang/String,android/os/Parcelable)> -> _SINK_
Landroid/os/Bundle; void putParcelableArray(java/lang/String,android/os/Parcelable[])> -> _SINK_
Landroid/os/Bundle; void putParcelableArrayList(java/lang/String,java/util/ArrayList)> -> _SINK_
Landroid/os/Bundle; void putSerializable(java/lang/String,java/io/Serializable)> -> _SINK_
Landroid/os/Bundle; void putShort(java/lang/String,short)> -> _SINK_
Landroid/os/Bundle; void putShortArray(java/lang/String,short[])> -> _SINK_
Landroid/os/Bundle; void putSparseParcelableArray(java/lang/String,android/util/SparseArray)> -> _SINK_
Landroid/os/Bundle; void putString(java/lang/String,java/lang/String)> -> _SINK_
Landroid/os/Bundle; void putStringArray(java/lang/String,java/lang/String[])> -> _SINK_
Landroid/os/Bundle; void putStringArrayList(java/lang/String,java/util/ArrayList)> -> _SINK_
Landroid/os/Bundle; void putAll(android/os/Bundle)> -> _SINK_
Landroid/util/Log; int d(java/lang/String,java/lang/String)> -> _SINK_
Landroid/util/Log; int d(java/lang/String,java/lang/String,java/lang/Throwable)> -> _SINK_
Landroid/util/Log; int e(java/lang/String,java/lang/String)> -> _SINK_
Landroid/util/Log; int e(java/lang/String,java/lang/String,java/lang/Throwable)> -> _SINK_
Landroid/util/Log; int i(java/lang/String,java/lang/String)> -> _SINK_
Landroid/util/Log; int i(java/lang/String,java/lang/String,java/lang/Throwable)> -> _SINK_
Landroid/util/Log; int v(java/lang/String,java/lang/String)> -> _SINK_
Landroid/util/Log; int v(java/lang/String,java/lang/String,java/lang/Throwable)> -> _SINK_
Landroid/util/Log; int w(java/lang/String,java/lang/Throwable)> -> _SINK_
Landroid/util/Log; int w(java/lang/String,java/lang/String)> -> _SINK_
Landroid/util/Log; int w(java/lang/String,java/lang/String,java/lang/Throwable)> -> _SINK_
Landroid/util/Log; int wtf(java/lang/String,java/lang/Throwable)> -> _SINK_
Landroid/util/Log; int wtf(java/lang/String,java/lang/String)> -> _SINK_
Landroid/util/Log; int wtf(java/lang/String,java/lang/String,java/lang/Throwable)> -> _SINK_
Ljava/io/OutputStream; void write(byte[])> -> _SINK_
Ljava/io/OutputStream; void write(byte[],int,int)> -> _SINK_
Ljava/io/OutputStream; void write(int)> -> _SINK_
Ljava/io/FileOutputStream; void write(byte[])> -> _SINK_
Ljava/io/FileOutputStream; void write(byte[],int,int)> -> _SINK_
Ljava/io/FileOutputStream; void write(int)> -> _SINK_
Ljava/io/Writer; void write(char[])> -> _SINK_
Ljava/io/Writer; void write(char[],int,int)> -> _SINK_
Ljava/io/Writer; void write(int)> -> _SINK_
Ljava/io/Writer; void write(java/lang/String)> -> _SINK_
Ljava/io/Writer; void write(java/lang/String,int,int)> -> _SINK_
Ljava/io/Writer; java/io/Writer append(java/lang/CharSequence)> -> _SINK_
Ljava/io/OutputStreamWriter; java/io/Writer append(java/lang/CharSequence)> -> _SINK_
Landroid/content/Intent; android/content/Intent setAction(java/lang/String)> -> _SINK_
Landroid/content/Intent; android/content/Intent setClassName(android/content/Context,java/lang/Class)> -> _SINK_
Landroid/content/Intent; android/content/Intent setClassName(android/content/Context,java/lang/String)> -> _SINK_
Landroid/content/Intent; android/content/Intent setComponent(android/content/ComponentName)> -> _SINK_
Landroid/content/Context; void sendBroadcast(android/content/Intent)> -> _SINK_
Landroid/content/Context; void sendBroadcast(android/content/Intent,java/lang/String)> -> _SINK_
Landroid/content/Context; void sendOrderedBroadcast(android/content/Intent,java/lang/String)> -> _SINK_
Landroid/content/ContextWrapper; void sendOrderedBroadcast(android/content/Intent,java/lang/String)> -> _SINK_
Landroid/media/MediaRecorder; void setVideoSource(int)> -> _SINK_
Landroid/media/MediaRecorder; void setPreviewDisplay(android/view/Surface)> -> _SINK_
Landroid/media/MediaRecorder; void start()> -> _SINK_
Landroid/content/Context; android/content/Intent registerReceiver(android/content/BroadcastReceiver,android/content/IntentFilter)> -> _SINK_
Landroid/content/Context; android/content/Intent registerReceiver(android/content/BroadcastReceiver,android/content/IntentFilter,java/lang/String,android/os/Handler)> -> _SINK_
Landroid/content/IntentFilter; void addAction(java/lang/String)> -> _SINK_
Landroid/telephony/SmsManager; void sendTextMessage(java/lang/String,java/lang/String,java/lang/String,android/app/PendingIntent,android/app/PendingIntent)> android/permission/SEND_SMS -> _SINK_ 
Landroid/telephony/SmsManager; void sendDataMessage(java/lang/String,java/lang/String,short,byte[],android/app/PendingIntent,android/app/PendingIntent)> android/permission/SEND_SMS -> _SINK_ 
Landroid/telephony/SmsManager; void sendMultipartTextMessage(java/lang/String,java/lang/String,java/util/ArrayList,java/util/ArrayList,java/util/ArrayList)> android/permission/SEND_SMS -> _SINK_ 
Ljava/net/Socket; void connect(java/net/SocketAddress)> -> _SINK_
Landroid/os/Handler; boolean sendMessage(android/os/Message)> -> _SINK_
Landroid/content/SharedPreferences$Editor; android/content/SharedPreferences$Editor putBoolean(java/lang/String,boolean)> -> _SINK_
Landroid/content/SharedPreferences$Editor; android/content/SharedPreferences$Editor putFloat(java/lang/String,float)> -> _SINK_
Landroid/content/SharedPreferences$Editor; android/content/SharedPreferences$Editor putInt(java/lang/String,int)> -> _SINK_
Landroid/content/SharedPreferences$Editor; android/content/SharedPreferences$Editor putLong(java/lang/String,long)> -> _SINK_
Landroid/content/SharedPreferences$Editor; android/content/SharedPreferences$Editor putString(java/lang/String,java/lang/String)> -> _SINK_
Landroid/content/Context; void startActivities(android/content/Intent[])> -> _SINK_
Landroid/content/Context; void startActivities(android/content/Intent[],android/os/Bundle)> -> _SINK_
Landroid/content/Context; android/content/ComponentName startService(android/content/Intent)> -> _SINK_
Landroid/content/Context; boolean bindService(android/content/Intent,android/content/ServiceConnection,int)> -> _SINK_
Landroid/content/Context; void sendBroadcast(android/content/Intent)> -> _SINK_
Landroid/content/Context; void sendBroadcast(android/content/Intent,java/lang/String)> -> _SINK_
Landroid/app/Activity; void setResult(int,android/content/Intent)> -> _SINK_
Landroid/app/Activity; void startActivities(android/content/Intent[])> -> _SINK_
Landroid/app/Activity; void startActivities(android/content/Intent[],android/os/Bundle)> -> _SINK_
Landroid/app/Activity; void startActivityForResult(android/content/Intent,int)> -> _SINK_
Landroid/app/Activity; void startActivityForResult(android/content/Intent,int,android/os/Bundle)> -> _SINK_
Landroid/app/Activity; void startActivityFromChild(android/app/Activity,android/content/Intent,int,android/os/Bundle)> -> _SINK_
Landroid/app/Activity; void startActivityFromChild(android/app/Activity,android/content/Intent,int)> -> _SINK_
Landroid/app/Activity; void startActivityFromFragment(android/app/Fragment,android/content/Intent,int,android/os/Bundle)> -> _SINK_
Landroid/app/Activity; void startActivityFromFragment(android/app/Fragment,android/content/Intent,int)> -> _SINK_
Landroid/app/Activity; void startActivityIfNeeded(android/content/Intent,int,android/os/Bundle)> -> _SINK_
Landroid/app/Activity; void startActivityIfNeeded(android/content/Intent,int)> -> _SINK_
Landroid/app/Activity; android/content/ComponentName startService(android/content/Intent)> -> _SINK_
Landroid/app/Activity; boolean bindService(android/content/Intent,android/content/ServiceConnection,int)> -> _SINK_
Landroid/app/Activity; void sendBroadcast(android/content/Intent)> -> _SINK_
Landroid/app/Activity; void sendBroadcast(android/content/Intent,java/lang/String)> -> _SINK_
Landroid/app/Activity; void sendBroadcastAsUser(android/content/Intent,android/os/UserHandle)> -> _SINK_
Landroid/app/Activity; void sendBroadcastAsUser(android/content/Intent,android/os/UserHandle,java/lang/String)> -> _SINK_
Landroid/app/Activity; void sendOrderedBroadcast(android/content/Intent,java/lang/String,android/content/BroadcastReceiver,android/os/Handler,int,java/lang/String,android/os/Bundle)> -> _SINK_
Landroid/app/Activity; void sendOrderedBroadcast(android/content/Intent,java/lang/String)> -> _SINK_
Landroid/app/Activity; void sendOrderedBroadcastAsUser(android/content/Intent,android/os/UserHandle,java/lang/String,android/content/BroadcastReceiver,android/os/Handler,int,java/lang/String,android/os/Bundle)> -> _SINK_
Landroid/app/Activity; void sendStickyBroadcast(android/content/Intent)> -> _SINK_
Landroid/app/Activity; void sendStickyBroadcastAsUser(android/content/Intent,android/os/UserHandle)> -> _SINK_
Landroid/app/Activity; void sendStickyOrderedBroadcast(android/content/Intent,android/content/BroadcastReceiver,android/os/Handler,int,java/lang/String,android/os/Bundle)> -> _SINK_
Landroid/app/Activity; void sendStickyOrderedBroadcastAsUser(android/content/Intent,android/os/UserHandle,android/content/BroadcastReceiver,android/os/Handler,int,java/lang/String,android/os/Bundle)> -> _SINK_
Landroid/content/ContentResolver; android/net/Uri insert(android/net/Uri,android/content/ContentValues)> -> _SINK_
Landroid/content/ContentResolver; int delete(android/net/Uri,java/lang/String,java/lang/String[])> -> _SINK_
Landroid/content/ContentResolver; int update(android/net/Uri,android/content/ContentValues,java/lang/String,java/lang/String[])> -> _SINK_
Landroid/content/ContentResolver; android/database/Cursor query(android/net/Uri,java/lang/String[],java/lang/String,java/lang/String[],java/lang/String)> -> _SINK_
Landroid/content/ContentResolver; android/database/Cursor query(android/net/Uri,java/lang/String[],java/lang/String,java/lang/String[],java/lang/String,android/os/CancellationSignal)> -> _SINK_
Ljava/lang/ProcessBuilder; java/lang/Process start()> -> _SINK_
Lorg/apache/http/impl/client/DefaultHttpClient; org/apache/http/HttpResponse execute(org/apache/http/client/methods/HttpUriRequest)> -> _SINK_
Lorg/apache/http/client/HttpClient; org/apache/http/HttpResponse execute(org/apache/http/client/methods/HttpUriRequest)> -> _SINK_